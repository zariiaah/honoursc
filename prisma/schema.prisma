generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Permission {
  USER
  HONOURS_COMMITTEE
  ADMIN
}

enum HonourField {
  PARLIAMENTARY_AND_PUBLIC_SERVICE
  MILITARY
  DIPLOMATIC
  PRIVATE_SECTOR
}

enum NominationStatus {
  PENDING
  UNDER_REVIEW
  APPROVED
  REJECTED
}

model User {
  id              String     @id @default(uuid())
  robloxUsername  String     @unique
  discordUsername String
  password        String
  isAdmin         Boolean    @default(false)
  permission      Permission @default(USER)
  createdAt       DateTime   @default(now())

  nominations    Nomination[]    @relation("Nominator")
  honours        Honour[] // Relation to Honour
  reviewComments ReviewComment[]

  @@map("users")
}

model Nomination {
  id                    String           @id @default(uuid())
  nominatorId           String
  nomineeRobloxUsername String
  fields                String[] // Array of fields, e.g. ["Military", "Diplomatic"]
  description           String
  status                NominationStatus @default(PENDING)
  createdAt             DateTime         @default(now())

  nominator      User            @relation("Nominator", fields: [nominatorId], references: [id])
  reviewComments ReviewComment[]

  @@map("nominations")
}

model ReviewComment {
  id           String   @id @default(uuid())
  nominationId String
  commenterId  String
  comment      String
  createdAt    DateTime @default(now())

  nomination Nomination @relation(fields: [nominationId], references: [id])
  commenter  User       @relation(fields: [commenterId], references: [id])

  @@map("review_comments")
}

model Honour {
  id              String      @id @default(uuid())
  robloxUsername  String
  discordUsername String
  title           String
  field           HonourField
  description     String?
  awardedAt       DateTime    @default(now())

  userId String? // Optional FK to User
  user   User?   @relation(fields: [userId], references: [id])

  @@map("honours")
}
