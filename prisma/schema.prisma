generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid())
  robloxUsername   String   @unique
  discordUsername  String
  password         String
  isAdmin          Boolean  @default(false)
  permission       Permission @default(User)
  createdAt        DateTime @default(now())

  nominations      Nomination[] @relation("NominatorNominations")
  reviewComments   ReviewComment[]
}

model Nomination {
  id                     String           @id @default(uuid())
  nominatorId            String
  nomineeRobloxUsername  String
  fields                 String[]         // Array of enum-like strings
  description            String           @db.VarChar(500)
  status                 NominationStatus @default(pending)
  createdAt              DateTime         @default(now())

  nominator              User             @relation("NominatorNominations", fields: [nominatorId], references: [id])
  reviewComments         ReviewComment[]
}

model ReviewComment {
  id           String   @id @default(uuid())
  nominationId String
  userId       String
  username     String
  comment      String   @db.VarChar(1000)
  createdAt    DateTime @default(now())

  nomination   Nomination @relation(fields: [nominationId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
}

model Honour {
  id              String   @id @default(uuid())
  robloxUsername  String
  discordUsername String
  title           String
  field           HonourField
  awardedAt       DateTime @default(now())
  description     String?
}

enum Permission {
  User
  Honours_Committee
  Admin
}

enum NominationStatus {
  pending
  under_review
  approved
  rejected
}

enum HonourField {
  Parliamentary_and_Public_Service
  Military
  Diplomatic
  Private_Sector
}